{
  "openapi": "3.0.3",
  "info": {
    "title": "BILEMO",
    "description": "API WEB SERVICE\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/",
      "description": ""
    }
  ],
  "paths": {
    "/api/clients": {
      "get": {
        "operationId": "getClientCollection",
        "tags": [
          "Client"
        ],
        "responses": {
          "200": {
            "description": "Client collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Client.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Client resources.",
        "description": "Retrieves the collection of Client resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form"
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "postClientCollection",
        "tags": [
          "Client"
        ],
        "responses": {
          "201": {
            "description": "Client resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Client.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            },
            "links": {
              "GetClientItem": {
                "operationId": "getClientItem",
                "parameters": {
                  "id": "$response.body#/id"
                },
                "requestBody": [],
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/clients/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "summary": "Creates a Client resource.",
        "description": "Creates a Client resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Client resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Client.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/clients/{id}": {
      "get": {
        "operationId": "getClientItem",
        "tags": [
          "Client"
        ],
        "responses": {
          "200": {
            "description": "Client resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Client.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Client resource.",
        "description": "Retrieves a Client resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "putClientItem",
        "tags": [
          "Client"
        ],
        "responses": {
          "200": {
            "description": "Client resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Client.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            },
            "links": {
              "GetClientItem": {
                "operationId": "getClientItem",
                "parameters": {
                  "id": "$response.body#/id"
                },
                "requestBody": [],
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/clients/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Replaces the Client resource.",
        "description": "Replaces the Client resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "description": "The updated Client resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Client.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "deleteClientItem",
        "tags": [
          "Client"
        ],
        "responses": {
          "204": {
            "description": "Client resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Client resource.",
        "description": "Removes the Client resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "patchClientItem",
        "tags": [
          "Client"
        ],
        "responses": {
          "200": {
            "description": "Client resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Client.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            },
            "links": {
              "GetClientItem": {
                "operationId": "getClientItem",
                "parameters": {
                  "id": "$response.body#/id"
                },
                "requestBody": [],
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/clients/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Updates the Client resource.",
        "description": "Updates the Client resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "description": "The updated Client resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/clients/{id}/users": {
      "get": {
        "operationId": "api_clients_users_get_subresourceUserCollection",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User.jsonld-clients_users"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User-clients_users"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User-clients_users"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of User resources.",
        "description": "Retrieves the collection of User resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form"
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/api/clients/{id}/users/{users}": {
      "get": {
        "operationId": "api_clients_users_item_get_subresourceClientSubresource",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Client resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User.jsonld-read"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User-read"
                }
              }
            }
          }
        },
        "summary": "Retrieves a Client resource.",
        "description": "Retrieves a Client resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client identifier",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "name": "users",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "deprecated": false
      },
      "parameters": []
    },
    "/api/login": {
      "ref": "JWT Token",
      "post": {
        "operationId": "postCredentialsItem",
        "tags": [],
        "responses": {
          "200": {
            "description": "Get JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        },
        "summary": "Get JWT token to login.",
        "description": "",
        "externalDocs": {
          "description": "",
          "url": ""
        },
        "parameters": [],
        "requestBody": {
          "description": "Generate new JWT Token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credentials"
              }
            }
          },
          "required": false
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/products": {
      "get": {
        "operationId": "getProductCollection",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Product collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product.jsonld"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Product resources.",
        "description": "Retrieves the collection of Product resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form"
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "postProductCollection",
        "tags": [
          "Product"
        ],
        "responses": {
          "201": {
            "description": "Product resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Product.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            },
            "links": {
              "GetProductItem": {
                "operationId": "getProductItem",
                "parameters": {
                  "id": "$response.body#/id"
                },
                "requestBody": [],
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/products/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "summary": "Creates a Product resource.",
        "description": "Creates a Product resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Product resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Product.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/products/{id}": {
      "get": {
        "operationId": "getProductItem",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Product resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Product.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Product resource.",
        "description": "Retrieves a Product resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "putProductItem",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Product resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Product.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            },
            "links": {
              "GetProductItem": {
                "operationId": "getProductItem",
                "parameters": {
                  "id": "$response.body#/id"
                },
                "requestBody": [],
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/products/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Replaces the Product resource.",
        "description": "Replaces the Product resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "description": "The updated Product resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Product.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "deleteProductItem",
        "tags": [
          "Product"
        ],
        "responses": {
          "204": {
            "description": "Product resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Product resource.",
        "description": "Removes the Product resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "patchProductItem",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Product resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Product.jsonld"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            },
            "links": {
              "GetProductItem": {
                "operationId": "getProductItem",
                "parameters": {
                  "id": "$response.body#/id"
                },
                "requestBody": [],
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/products/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Updates the Product resource.",
        "description": "Updates the Product resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "description": "The updated Product resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/users": {
      "get": {
        "operationId": "getUserCollection",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User.jsonld-read"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string",
                                "nullable": true
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User-read"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User-read"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of User resources.",
        "description": "Retrieves the collection of User resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form"
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "postUserCollection",
        "tags": [
          "User"
        ],
        "responses": {
          "201": {
            "description": "User resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User.jsonld-read"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User-read"
                }
              }
            },
            "links": {
              "GetUserItem": {
                "operationId": "getUserItem",
                "parameters": {
                  "id": "$response.body#/id"
                },
                "requestBody": [],
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/users/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "summary": "Creates a User resource.",
        "description": "Creates a User resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new User resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/User.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "getUserItem",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User.jsonld-read_client_info"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-read_client_info"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User-read_client_info"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a User resource.",
        "description": "Retrieves a User resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "putUserItem",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User.jsonld-read"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User-read"
                }
              }
            },
            "links": {
              "GetUserItem": {
                "operationId": "getUserItem",
                "parameters": {
                  "id": "$response.body#/id"
                },
                "requestBody": [],
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/users/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Replaces the User resource.",
        "description": "Replaces the User resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "description": "The updated User resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/User.jsonld"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "deleteUserItem",
        "tags": [
          "User"
        ],
        "responses": {
          "204": {
            "description": "User resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the User resource.",
        "description": "Removes the User resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "patchUserItem",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User.jsonld-read"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User-read"
                }
              }
            },
            "links": {
              "GetUserItem": {
                "operationId": "getUserItem",
                "parameters": {
                  "id": "$response.body#/id"
                },
                "requestBody": [],
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/users/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Updates the User resource.",
        "description": "Updates the User resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "description": "The updated User resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/users/{id}/id": {
      "get": {
        "operationId": "api_users_id_get_subresourceUserSubresource",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User.jsonld-read"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User-read"
                }
              }
            }
          }
        },
        "summary": "Retrieves a User resource.",
        "description": "Retrieves a User resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "deprecated": false
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "Client": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        },
        "required": [
          "name",
          "createdAt"
        ]
      },
      "Client-read_client_info": {
        "type": "object",
        "description": "",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "Client.jsonld": {
        "type": "object",
        "description": "",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        },
        "required": [
          "name",
          "createdAt"
        ]
      },
      "Client.jsonld-read_client_info": {
        "type": "object",
        "description": "",
        "required": [
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Credentials": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "pseudo"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        }
      },
      "Product": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "phone": {
            "type": "string"
          },
          "trademark": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "phone",
          "trademark",
          "summary",
          "price",
          "createdAt"
        ]
      },
      "Product.jsonld": {
        "type": "object",
        "description": "",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "phone": {
            "type": "string"
          },
          "trademark": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "phone",
          "trademark",
          "summary",
          "price",
          "createdAt"
        ]
      },
      "Token": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "User": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "http://schema.org/email"
            },
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "type": "string"
          },
          "client": {
            "type": "string",
            "format": "iri-reference"
          }
        },
        "required": [
          "username",
          "email",
          "password",
          "createdAt"
        ]
      },
      "User-clients_users": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "http://schema.org/email"
            },
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "email",
          "password",
          "createdAt"
        ]
      },
      "User-read": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "http://schema.org/email"
            },
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "type": "string"
          },
          "client": {
            "type": "string",
            "format": "iri-reference"
          }
        },
        "required": [
          "username",
          "email",
          "password",
          "createdAt"
        ]
      },
      "User-read_client_info": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "http://schema.org/email"
            },
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "type": "string"
          },
          "client": {
            "$ref": "#/components/schemas/Client-read_client_info"
          }
        },
        "required": [
          "username",
          "email",
          "password",
          "createdAt"
        ]
      },
      "User.jsonld": {
        "type": "object",
        "description": "",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "http://schema.org/email"
            },
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "type": "string"
          },
          "client": {
            "type": "string",
            "format": "iri-reference"
          }
        },
        "required": [
          "username",
          "email",
          "password",
          "createdAt"
        ]
      },
      "User.jsonld-clients_users": {
        "type": "object",
        "description": "",
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "http://schema.org/email"
            },
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "email",
          "password",
          "createdAt"
        ]
      },
      "User.jsonld-read": {
        "type": "object",
        "description": "",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "http://schema.org/email"
            },
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "type": "string"
          },
          "client": {
            "type": "string",
            "format": "iri-reference"
          }
        },
        "required": [
          "username",
          "email",
          "password",
          "createdAt"
        ]
      },
      "User.jsonld-read_client_info": {
        "type": "object",
        "description": "",
        "properties": {
          "@context": {
            "readOnly": true,
            "type": "string"
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "http://schema.org/email"
            },
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "type": "string"
          },
          "client": {
            "$ref": "#/components/schemas/Client.jsonld-read_client_info"
          }
        },
        "required": [
          "username",
          "email",
          "password",
          "createdAt"
        ]
      }
    },
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "description": "Value for the Authorization header parameter.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ],
  "tags": []
}