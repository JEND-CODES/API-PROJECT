{
    "openapi": "3.0.3",
    "info": {
        "title": "BILEMO",
        "description": "<img src='/images/api-logo.png' alt='API WEB SERVICE' title='API WEB SERVICE' /><br /><br /><strong>API WEB SERVICE</strong><br /><br /><a href='http://localhost:4000'>HOMEPAGE</a>&nbsp;&nbsp;<a href='http://localhost:4000/api/docs?ui=re_doc'>DOCUMENTATION</a>&nbsp;&nbsp;<a href='http://localhost:4000/disconnect'>LOGOUT</a>",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/",
            "description": ""
        }
    ],
    "paths": {
        "/api/clients": {
            "get": {
                "operationId": "getClientCollection",
                "tags": [
                    "Client"
                ],
                "responses": {
                    "200": {
                        "description": "Client collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Client.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Client"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Client"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Query to the list of clients",
                "description": "This collection of resources displays the list of Bilemo clients",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form"
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postClientCollection",
                "tags": [
                    "Client"
                ],
                "responses": {
                    "201": {
                        "description": "Client resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        },
                        "links": {
                            "GetClientItem": {
                                "operationId": "getClientItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "requestBody": [],
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/clients/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "summary": "Creation of a new client",
                "description": "The creation of a new client must be associated with a consumer account",
                "parameters": [],
                "requestBody": {
                    "description": "The new Client resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Client"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/clients/{id}": {
            "get": {
                "operationId": "getClientItem",
                "tags": [
                    "Client"
                ],
                "responses": {
                    "200": {
                        "description": "Client resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Single client informations",
                "description": "Informations retrieval for a single Bilemo client",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putClientItem",
                "tags": [
                    "Client"
                ],
                "responses": {
                    "200": {
                        "description": "Client resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        },
                        "links": {
                            "GetClientItem": {
                                "operationId": "getClientItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "requestBody": [],
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/clients/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Client resource.",
                "description": "Replaces the Client resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "requestBody": {
                    "description": "The updated Client resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Client"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteClientItem",
                "tags": [
                    "Client"
                ],
                "responses": {
                    "204": {
                        "description": "Client resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Client resource.",
                "description": "Removes the Client resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "patchClientItem",
                "tags": [
                    "Client"
                ],
                "responses": {
                    "200": {
                        "description": "Client resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        },
                        "links": {
                            "GetClientItem": {
                                "operationId": "getClientItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "requestBody": [],
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/clients/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the Client resource.",
                "description": "Updates the Client resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "requestBody": {
                    "description": "The updated Client resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/clients/{id}/consumers": {
            "get": {
                "operationId": "api_clients_consumers_get_subresourceConsumerCollection",
                "tags": [
                    "Consumer"
                ],
                "responses": {
                    "200": {
                        "description": "Consumer collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Consumer.jsonld-clients_consumers"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Consumer-clients_consumers"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Consumer-clients_consumers"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Consult the list of consumers linked to a client",
                "description": "Query by client ID to display the list of consumers",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form"
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/clients/{id}/consumers/{consumers}": {
            "get": {
                "operationId": "api_clients_consumers_item_get_subresourceClientSubresource",
                "tags": [
                    "Consumer"
                ],
                "responses": {
                    "200": {
                        "description": "Client resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer.jsonld-read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer-read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer-read"
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Client resource.",
                "description": "Retrieves a Client resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client identifier",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    },
                    {
                        "name": "consumers",
                        "in": "path",
                        "description": "Consumer identifier",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/consumers": {
            "get": {
                "operationId": "getConsumerCollection",
                "tags": [
                    "Consumer"
                ],
                "responses": {
                    "200": {
                        "description": "Consumer collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Consumer.jsonld-read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Consumer-read"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Consumer-read"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Consumer resources.",
                "description": "Retrieves the collection of Consumer resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form"
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postConsumerCollection",
                "tags": [
                    "Consumer"
                ],
                "responses": {
                    "201": {
                        "description": "Consumer resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer.jsonld-read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer-read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer-read"
                                }
                            }
                        },
                        "links": {
                            "GetConsumerItem": {
                                "operationId": "getConsumerItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "requestBody": [],
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/consumers/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "summary": "Creates a Consumer resource.",
                "description": "Creates a Consumer resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Consumer resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Consumer.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Consumer"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Consumer"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/consumers/{id}": {
            "get": {
                "operationId": "getConsumerItem",
                "tags": [
                    "Consumer"
                ],
                "responses": {
                    "200": {
                        "description": "Consumer resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer.jsonld-read_client_info"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer-read_client_info"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer-read_client_info"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Consult the details of a consumer linked to a client",
                "description": "Query by identifier to consult consumer's informations",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putConsumerItem",
                "tags": [
                    "Consumer"
                ],
                "responses": {
                    "200": {
                        "description": "Consumer resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer.jsonld-read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer-read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer-read"
                                }
                            }
                        },
                        "links": {
                            "GetConsumerItem": {
                                "operationId": "getConsumerItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "requestBody": [],
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/consumers/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Consumer resource.",
                "description": "Replaces the Consumer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "requestBody": {
                    "description": "The updated Consumer resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Consumer.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Consumer"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Consumer"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteConsumerItem",
                "tags": [
                    "Consumer"
                ],
                "responses": {
                    "204": {
                        "description": "Consumer resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Consumer resource.",
                "description": "Removes the Consumer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "patchConsumerItem",
                "tags": [
                    "Consumer"
                ],
                "responses": {
                    "200": {
                        "description": "Consumer resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer.jsonld-read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer-read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer-read"
                                }
                            }
                        },
                        "links": {
                            "GetConsumerItem": {
                                "operationId": "getConsumerItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "requestBody": [],
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/consumers/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the Consumer resource.",
                "description": "Updates the Consumer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "requestBody": {
                    "description": "The updated Consumer resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Consumer"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/consumers/{id}/id": {
            "get": {
                "operationId": "api_consumers_id_get_subresourceConsumerSubresource",
                "tags": [
                    "Consumer"
                ],
                "responses": {
                    "200": {
                        "description": "Consumer resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer.jsonld-read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer-read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Consumer-read"
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Consumer resource.",
                "description": "Retrieves a Consumer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Consumer identifier",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/login": {
            "ref": "JWT Token",
            "post": {
                "operationId": "postCredentialsItem",
                "tags": [
                    "Token"
                ],
                "responses": {
                    "200": {
                        "description": "Get JWT token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    }
                },
                "summary": "Get JWT token to login.",
                "description": "Enter your credentials to generate a JWT Token",
                "externalDocs": {
                    "description": "",
                    "url": ""
                },
                "parameters": [],
                "requestBody": {
                    "description": "Generate new JWT Token",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Credentials"
                            }
                        }
                    },
                    "required": false
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/products": {
            "get": {
                "operationId": "getProductCollection",
                "tags": [
                    "Product"
                ],
                "responses": {
                    "200": {
                        "description": "Product collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Consult the product list",
                "description": "Query to display all Bilemo products",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form"
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postProductCollection",
                "tags": [
                    "Product"
                ],
                "responses": {
                    "201": {
                        "description": "Product resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "links": {
                            "GetProductItem": {
                                "operationId": "getProductItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "requestBody": [],
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/products/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "summary": "Creates a Product resource.",
                "description": "Creates a Product resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Product resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/products/{id}": {
            "get": {
                "operationId": "getProductItem",
                "tags": [
                    "Product"
                ],
                "responses": {
                    "200": {
                        "description": "Product resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "View the details of a product",
                "description": "Query to display a Bilemo product",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putProductItem",
                "tags": [
                    "Product"
                ],
                "responses": {
                    "200": {
                        "description": "Product resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "links": {
                            "GetProductItem": {
                                "operationId": "getProductItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "requestBody": [],
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/products/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Product resource.",
                "description": "Replaces the Product resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "requestBody": {
                    "description": "The updated Product resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteProductItem",
                "tags": [
                    "Product"
                ],
                "responses": {
                    "204": {
                        "description": "Product resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Product resource.",
                "description": "Removes the Product resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "patchProductItem",
                "tags": [
                    "Product"
                ],
                "responses": {
                    "200": {
                        "description": "Product resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "links": {
                            "GetProductItem": {
                                "operationId": "getProductItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "requestBody": [],
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/products/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the Product resource.",
                "description": "Updates the Product resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "requestBody": {
                    "description": "The updated Product resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        }
    },
    "components": {
        "schemas": {
            "Client": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "phoneNbr": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "consumers": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    }
                },
                "required": [
                    "name",
                    "address",
                    "city",
                    "phoneNbr",
                    "createdAt"
                ]
            },
            "Client-read_client_info": {
                "type": "object",
                "description": "",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Client.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "phoneNbr": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "consumers": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    }
                },
                "required": [
                    "name",
                    "address",
                    "city",
                    "phoneNbr",
                    "createdAt"
                ]
            },
            "Client.jsonld-read_client_info": {
                "type": "object",
                "description": "",
                "required": [
                    "name"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Consumer": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "externalDocs": {
                            "url": "http://schema.org/email"
                        },
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "phoneNbr": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "role": {
                        "type": "string"
                    },
                    "client": {
                        "type": "string",
                        "format": "iri-reference"
                    }
                },
                "required": [
                    "username",
                    "email",
                    "address",
                    "city",
                    "phoneNbr",
                    "password",
                    "createdAt"
                ]
            },
            "Consumer-clients_consumers": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "externalDocs": {
                            "url": "http://schema.org/email"
                        },
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "phoneNbr": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "username",
                    "email",
                    "address",
                    "city",
                    "phoneNbr",
                    "password",
                    "createdAt"
                ]
            },
            "Consumer-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "externalDocs": {
                            "url": "http://schema.org/email"
                        },
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "phoneNbr": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "role": {
                        "type": "string"
                    },
                    "client": {
                        "type": "string",
                        "format": "iri-reference"
                    }
                },
                "required": [
                    "username",
                    "email",
                    "address",
                    "city",
                    "phoneNbr",
                    "password",
                    "createdAt"
                ]
            },
            "Consumer-read_client_info": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "externalDocs": {
                            "url": "http://schema.org/email"
                        },
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "phoneNbr": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "role": {
                        "type": "string"
                    },
                    "client": {
                        "$ref": "#/components/schemas/Client-read_client_info"
                    }
                },
                "required": [
                    "username",
                    "email",
                    "address",
                    "city",
                    "phoneNbr",
                    "password",
                    "createdAt"
                ]
            },
            "Consumer.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "externalDocs": {
                            "url": "http://schema.org/email"
                        },
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "phoneNbr": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "role": {
                        "type": "string"
                    },
                    "client": {
                        "type": "string",
                        "format": "iri-reference"
                    }
                },
                "required": [
                    "username",
                    "email",
                    "address",
                    "city",
                    "phoneNbr",
                    "password",
                    "createdAt"
                ]
            },
            "Consumer.jsonld-clients_consumers": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "externalDocs": {
                            "url": "http://schema.org/email"
                        },
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "phoneNbr": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "username",
                    "email",
                    "address",
                    "city",
                    "phoneNbr",
                    "password",
                    "createdAt"
                ]
            },
            "Consumer.jsonld-read": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "externalDocs": {
                            "url": "http://schema.org/email"
                        },
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "phoneNbr": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "role": {
                        "type": "string"
                    },
                    "client": {
                        "type": "string",
                        "format": "iri-reference"
                    }
                },
                "required": [
                    "username",
                    "email",
                    "address",
                    "city",
                    "phoneNbr",
                    "password",
                    "createdAt"
                ]
            },
            "Consumer.jsonld-read_client_info": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "externalDocs": {
                            "url": "http://schema.org/email"
                        },
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "phoneNbr": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "role": {
                        "type": "string"
                    },
                    "client": {
                        "$ref": "#/components/schemas/Client.jsonld-read_client_info"
                    }
                },
                "required": [
                    "username",
                    "email",
                    "address",
                    "city",
                    "phoneNbr",
                    "password",
                    "createdAt"
                ]
            },
            "Credentials": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "example": "pseudo"
                    },
                    "password": {
                        "type": "string",
                        "example": "password"
                    }
                }
            },
            "Product": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "trademark": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "phone",
                    "trademark",
                    "summary",
                    "color",
                    "price",
                    "createdAt"
                ]
            },
            "Product.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "trademark": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "phone",
                    "trademark",
                    "summary",
                    "color",
                    "price",
                    "createdAt"
                ]
            },
            "Token": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            }
        },
        "responses": {},
        "parameters": {},
        "examples": {},
        "requestBodies": {},
        "headers": {},
        "securitySchemes": {
            "apiKey": {
                "type": "apiKey",
                "description": "Value for the Authorization header parameter.",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "apiKey": []
        }
    ],
    "tags": []
}